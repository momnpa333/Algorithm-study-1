//BinSearch_Algorithm

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define SIZE 20
#define TRUE 1

// input.txt
/*5 20
1 5 11 15 22
2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 20 25 34 999*/

int binsearch(int list[], int n, int key);

int main()
{
	int size, asize;

	FILE* fp = fopen("input.txt", "r");

	fscanf(fp,"%d %d", &size,&asize);

	int* arr = malloc(sizeof(int) * asize);
	int* snum = malloc(sizeof(int) * size);

	for (int i = 0; i <= size; i++)
	{
		fscanf(fp, "%d", &snum[i]);
	}

	for (int i = 0; i < asize; i++){
		fscanf(fp, "%d", &arr[i]);
	}

	for (int i = 0; i < size; i++)
	{
		if(binsearch(arr,asize,snum[i]) == TRUE)
			printf("YES\n");
		else
			printf("NO\n");
	}

	return 0;
}

int binsearch(int list[], int n, int key)
{
	int low, high;
	int mid;

	low = 0;
	high = n -1;

	while (low <= high)
	{
		mid = (low + high) / 2;
		if (key == list[mid]) {
			return TRUE;
		}
		else if (key > list[mid])
		{
			low = mid + 1;
		}
		else if (key < list[mid])
		{
			high = mid - 1;
		}
	}
	return -1;
}
